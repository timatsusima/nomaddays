'use client';

import Link from 'next/link';
import Navigation from '@/components/Navigation';
import dynamic from 'next/dynamic';
import { useEffect, useMemo, useRef, useState } from 'react';

const Lottie: any = dynamic(() => import('lottie-react').then(m => m.default), { ssr: false });

const TG_BOT = process.env.NEXT_PUBLIC_TG_BOT || 'nomaddays_support_bot';

export default function AboutPage() {
  const [animationData, setAnimationData] = useState<any>(null);
  const [isModalOpen, setIsModalOpen] = useState<false | 'issue' | 'improve'>(false);
  const [message, setMessage] = useState('');
  const [file, setFile] = useState<File | null>(null);
  const [sending, setSending] = useState(false);
  const [sent, setSent] = useState(false);
  const [toast, setToast] = useState<{ title: string; message: string } | null>(null);

  const fileInputRef = useRef<HTMLInputElement | null>(null);
  const cameraInputRef = useRef<HTMLInputElement | null>(null);

  useEffect(() => {
    let ignore = false;
    fetch('/animations/splash_screen.json')
      .then((res) => res.json())
      .then((data) => { if (!ignore) setAnimationData(data); })
      .catch(() => { /* fallback –æ—Å—Ç–∞–≤–∏–º –ø—É—Å—Ç—ã–º */ });
    return () => { ignore = true; };
  }, []);

  const releaseNotes = useMemo(() => [
    {
      version: '1.0.0',
      date: '2025‚Äë08‚Äë30',
      items: [
        '–°—Ç—Ä–∞–Ω–∏—Ü–∞ ¬´–û –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏¬ª –≤ iOS‚Äë—Å—Ç–∏–ª–µ',
        '–ù–æ–≤—ã–π —Å–ø–ª–µ—à‚Äë—ç–∫—Ä–∞–Ω (Lottie) –∏ full‚Äëbleed –±–∞–Ω–Ω–µ—Ä',
        '–£–¥–∞–ª—ë–Ω –ø—É–Ω–∫—Ç ¬´–ò–º–ø–æ—Ä—Ç¬ª, —Å—Ç–∞–±–∏–ª—å–Ω–∞—è –Ω–∏–∂–Ω—è—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è',
        '–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –¥–∏–∑–∞–π–Ω‚Äë—Ç–æ–∫–µ–Ω–æ–≤ (—Ü–≤–µ—Ç–∞, —à—Ä–∏—Ñ—Ç—ã SF Pro)'
      ]
    }
  ], []);

  const getTelegramUser = () => {
    try {
      const wa = (window as any).Telegram?.WebApp;
      const u = wa?.initDataUnsafe?.user;
      if (!u) return null;
      return { id: u.id, firstName: u.first_name, lastName: u.last_name, username: u.username };
    } catch { return null; }
  };

  const handleOpenChat = (preset: 'issue' | 'improve') => {
    setIsModalOpen(preset);
  };

  const submitFeedback = async () => {
    if (!message.trim() && !file) return;
    try {
      setSending(true);

      if (file) {
        const fd = new FormData();
        fd.append('type', isModalOpen === 'issue' ? 'issue' : 'improve');
        fd.append('message', message);
        fd.append('url', typeof window !== 'undefined' ? window.location.href : '');
        fd.append('ua', typeof navigator !== 'undefined' ? navigator.userAgent : '');
        const user = getTelegramUser();
        if (user) fd.append('user', JSON.stringify(user));
        fd.append('file', file);
        const res = await fetch('/api/support/send', { method: 'POST', body: fd });
        if (res.ok) {
          setSent(true); setMessage(''); setFile(null);
          setIsModalOpen(false);
          setToast({ title: '–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ', message: '–°–ø–∞—Å–∏–±–æ! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏.' });
          return;
        }
      }

      // –ë–µ–∑ —Ñ–∞–π–ª–∞ ‚Äî JSON
      const res = await fetch('/api/support/send', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          type: isModalOpen === 'issue' ? 'issue' : 'improve',
          message,
          user: getTelegramUser() || undefined,
          url: typeof window !== 'undefined' ? window.location.href : undefined,
          ua: typeof navigator !== 'undefined' ? navigator.userAgent : undefined
        })
      });
      if (res.ok) {
        setSent(true); setMessage('');
        setIsModalOpen(false);
        setToast({ title: '–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ', message: '–°–ø–∞—Å–∏–±–æ! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏.' });
      }
    } finally {
      setSending(false);
    }
  };

  const openGallery = () => fileInputRef.current?.click();
  const openCamera = () => cameraInputRef.current?.click();

  return (
    <div className="min-h-screen bg-[var(--surface)] pb-24">
      {/* Header */}
      <header className="sticky top-0 z-40 bg-[var(--bg)]/80 backdrop-blur border-b border-[var(--border)]">
        <div className="px-4 h-14 flex items-center gap-3">
          <Link
            href="/dashboard"
            className="w-9 h-9 flex items-center justify-center rounded-full hover:bg-[var(--hover)]"
            aria-label="–ù–∞–∑–∞–¥"
          >
            <span className="text-xl">‚Üê</span>
          </Link>
          <h1 className="text-lg font-semibold text-[var(--text)]">–û –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏</h1>
        </div>
      </header>

      <main className="px-4 pt-6">
        {/* Hero: full-bleed Lottie */}
        <div className="text-center mb-6">
          <div
            className="mx-auto mb-3"
            style={{ width: '100vw', marginLeft: 'calc(-50vw + 50%)', marginRight: 'calc(-50vw + 50%)', height: '220px' }}
          >
            {animationData ? (
              <Lottie animationData={animationData} loop autoplay style={{ width: '100%', height: '100%' }} />
            ) : (
              <div className="text-6xl">üöÄ</div>
            )}
          </div>
          <div className="mt-2 text-[var(--text-secondary)]">AI-–ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è digital-–Ω–æ–º–∞–¥–æ–≤</div>
          <div className="mt-3 inline-flex items-center px-3 py-1 rounded-full border border-[var(--border)] bg-[var(--bg)] text-xs text-[var(--text-secondary)]">
            –í–µ—Ä—Å–∏—è 1.0.0
          </div>
        </div>

        {/* –ß—Ç–æ –¥–µ–ª–∞–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ */}
        <section className="card mb-4">
          <h2 className="card-title">–ß—Ç–æ –¥–µ–ª–∞–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ</h2>
          <div className="space-y-4 text-[var(--text)]">
            <p className="text-[var(--text-secondary)]">
              n0mad_days –ø–æ–º–æ–≥–∞–µ—Ç digital-–Ω–æ–º–∞–¥–∞–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –≤—Ä–µ–º—è –ø—Ä–µ–±—ã–≤–∞–Ω–∏—è –≤ —Ä–∞–∑–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∞—Ö
              –∏ —Å–æ–±–ª—é–¥–∞—Ç—å –≤–∏–∑–æ–≤—ã–µ –∏ —Ä–µ–∑–∏–¥–µ–Ω—Ç—Å–∫–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è.
            </p>
            <ul className="space-y-3 text-sm">
              <li className="flex items-start gap-3">
                <span className="text-lg">üìç</span>
                <div>
                  <div className="font-medium">–£—á—ë—Ç –ø–æ–µ–∑–¥–æ–∫</div>
                  <div className="text-[var(--text-secondary)]">–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–¥—Å—á—ë—Ç –¥–Ω–µ–π –ø—Ä–µ–±—ã–≤–∞–Ω–∏—è –≤ –∫–∞–∂–¥–æ–π —Å—Ç—Ä–∞–Ω–µ</div>
                </div>
              </li>
              <li className="flex items-start gap-3">
                <span className="text-lg">‚öñÔ∏è</span>
                <div>
                  <div className="font-medium">–°–æ–±–ª—é–¥–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª</div>
                  <div className="text-[var(--text-secondary)]">–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –≤–∏–∑–æ–≤—ã—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π —Ä–µ–∑–∏–¥–µ–Ω—Ç—Å—Ç–≤–∞</div>
                </div>
              </li>
              <li className="flex items-start gap-3">
                <span className="text-lg">ü§ñ</span>
                <div>
                  <div className="font-medium">–ò–ò-–ø–æ–¥—Å–∫–∞–∑–∫–∏</div>
                  <div className="text-[var(--text-secondary)]">–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è</div>
                </div>
              </li>
              <li className="flex items-start gap-3">
                <span className="text-lg">üìä</span>
                <div>
                  <div className="font-medium">–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ</div>
                  <div className="text-[var(--text-secondary)]">–ü—Ä–æ–≤–µ—Ä–∫–∞ –±—É–¥—É—â–∏—Ö –ø–æ–µ–∑–¥–æ–∫ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º</div>
                </div>
              </li>
            </ul>
          </div>
        </section>

        {/* –ü—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å */}
        <section className="card mb-4 border-[var(--green)]/30">
          <h2 className="card-title">–ü—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å</h2>
          <ul className="space-y-4 text-sm">
            <li className="flex items-start gap-3">
              <span className="text-[var(--green)]">üóÇÔ∏è</span>
              <div>
                <div className="font-medium">–õ–æ–∫–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ</div>
                <div className="text-[var(--text-secondary)]">–í—Å–µ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —Ö—Ä–∞–Ω—è—Ç—Å—è —Ç–æ–ª—å–∫–æ –Ω–∞ –≤–∞—à–µ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ –∏ –Ω–∏–∫—É–¥–∞ –Ω–µ –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è</div>
              </div>
            </li>
            <li className="flex items-start gap-3">
              <span className="text-[var(--green)]">üõ°Ô∏è</span>
              <div>
                <div className="font-medium">–ë–µ–∑ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏</div>
                <div className="text-[var(--text-secondary)]">–ù–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è —Å–æ–∑–¥–∞–≤–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç –∏–ª–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å –ª–∏—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é</div>
              </div>
            </li>
            <li className="flex items-start gap-3">
              <span className="text-[var(--green)]">üì∂</span>
              <div>
                <div className="font-medium">–ê–≤—Ç–æ–Ω–æ–º–Ω–∞—è —Ä–∞–±–æ—Ç–∞</div>
                <div className="text-[var(--text-secondary)]">–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –æ—Ñ–ª–∞–π–Ω, –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –Ω—É–∂–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏</div>
              </div>
            </li>
          </ul>
        </section>

        {/* –ü–æ—Å–ª–µ–¥–Ω–∏–µ —É–ª—É—á—à–µ–Ω–∏—è */}
        <section className="card mb-4">
          <h2 className="card-title">–ü–æ—Å–ª–µ–¥–Ω–∏–µ —É–ª—É—á—à–µ–Ω–∏—è</h2>
          <div className="space-y-4">
            {releaseNotes.map((rel) => (
              <div key={rel.version} className="rounded-lg border border-[var(--border)] p-3 bg-[var(--bg)]">
                <div className="flex items-center justify-between mb-2">
                  <div className="font-semibold">v{rel.version}</div>
                  <div className="text-xs text-[var(--text-secondary)]">{rel.date}</div>
                </div>
                <ul className="list-disc pl-5 text-sm text-[var(--text-secondary)] space-y-1">
                  {rel.items.map((i, idx) => <li key={idx}>{i}</li>)}
                </ul>
              </div>
            ))}
          </div>
        </section>

        {/* –ü–æ–¥–¥–µ—Ä–∂–∫–∞ */}
        <section className="card mb-6">
          <h2 className="card-title">–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å</h2>
          <p className="text-sm text-[var(--text-secondary)] mb-4">
            –ù–∞—à–ª–∏ –æ—à–∏–±–∫—É –∏–ª–∏ –µ—Å—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ —É–ª—É—á—à–µ–Ω–∏—é? –ú—ã –±—É–¥–µ–º —Ä–∞–¥—ã –≤–∞—à–µ–π –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏!
          </p>
          <div className="flex flex-col gap-3">
            <button onClick={() => handleOpenChat('issue')} className="btn w-full text-center">–°–æ–æ–±—â–∏—Ç—å –æ–± –æ—à–∏–±–∫–µ</button>
            <button onClick={() => handleOpenChat('improve')} className="btn-secondary w-full text-center rounded-full py-3">–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å —É–ª—É—á—à–µ–Ω–∏–µ</button>
          </div>
        </section>

        {/* Footer note */}
        <div className="text-center text-[var(--text-secondary)] text-sm mb-6">
          –°–¥–µ–ª–∞–Ω–æ —Å <span className="text-[var(--red)]">‚ù§</span> –¥–ª—è digital-–Ω–æ–º–∞–¥–æ–≤
        </div>
      </main>

      {/* Modal */}
      {isModalOpen && (
        <div className="fixed inset-0 z-[100] bg-black/50 flex items-end sm:items-center sm:justify-center">
          <div className="w-full sm:w-[520px] bg-[var(--bg)] rounded-t-2xl sm:rounded-2xl p-4 border border-[var(--border)]">
            <div className="flex items-center justify-between mb-3">
              <div className="text-base font-semibold">{isModalOpen === 'issue' ? '–°–æ–æ–±—â–∏—Ç—å –æ–± –æ—à–∏–±–∫–µ' : '–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å —É–ª—É—á—à–µ–Ω–∏–µ'}</div>
              <button onClick={() => { setIsModalOpen(false); setSent(false); }} className="w-9 h-9 rounded-full hover:bg-[var(--hover)]">‚úï</button>
            </div>
            {sent ? (
              <div className="text-sm text-[var(--text-secondary)]">
                –°–ø–∞—Å–∏–±–æ! –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ. –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏.
              </div>
            ) : (
              <>
                <textarea
                  value={message}
                  onChange={(e) => setMessage(e.target.value)}
                  placeholder="–û–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É –∏–ª–∏ –∏–¥–µ—é..."
                  className="w-full h-28 p-3 rounded-lg border border-[var(--border)] bg-[var(--surface)] text-[var(--text)] mb-3"
                />

                {/* Attach actions */}
                <div className="flex items-center gap-2 mb-3">
                  <button type="button" onClick={openGallery} className="px-3 py-2 rounded-full border border-[var(--border)] bg-[var(--bg)] text-sm">üìé –ò–∑ –≥–∞–ª–µ—Ä–µ–∏</button>
                  <button type="button" onClick={openCamera} className="px-3 py-2 rounded-full border border-[var(--border)] bg-[var(--bg)] text-sm">üì∑ –ö–∞–º–µ—Ä–∞</button>
                  {file && (
                    <div className="ml-auto text-xs text-[var(--text-secondary)] flex items-center gap-2">
                      <span className="truncate max-w-[140px]">{file.name}</span>
                      <button onClick={() => setFile(null)} className="px-2 py-1 rounded-full border border-[var(--border)]">√ó</button>
                    </div>
                  )}
                </div>

                {/* Hidden inputs */}
                <input ref={fileInputRef} type="file" accept="image/*,video/*" onChange={(e) => setFile(e.target.files?.[0] || null)} className="hidden" />
                <input ref={cameraInputRef} type="file" accept="image/*,video/*" capture="environment" onChange={(e) => setFile(e.target.files?.[0] || null)} className="hidden" />

                <button onClick={submitFeedback} disabled={sending || (!message.trim() && !file)} className="btn w-full">
                  {sending ? '–û—Ç–ø—Ä–∞–≤–∫–∞...' : '–û—Ç–ø—Ä–∞–≤–∏—Ç—å'}
                </button>
              </>
            )}
          </div>
        </div>
      )}

      {/* Toast banner above nav */}
      {toast && (
        <div className="fixed left-4 right-4 bottom-24 sm:bottom-24 z-[60]">
          <div className="bg-[var(--bg)] border border-[var(--border)] rounded-2xl shadow-md p-4 flex items-start gap-3">
            <div className="flex-1">
              <div className="font-semibold text-[var(--text)] mb-1">{toast.title}</div>
              <div className="text-sm text-[var(--text-secondary)]">{toast.message}</div>
            </div>
            <button onClick={() => setToast(null)} className="btn-secondary px-4 py-2 rounded-full">–û–∫</button>
          </div>
        </div>
      )}

      <Navigation />
    </div>
  );
}


