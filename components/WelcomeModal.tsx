'use client';

import { useState } from 'react';
import { Button } from '@/components/ui/Button';

interface WelcomeModalProps {
  isOpen: boolean;
  onClose: () => void;
  onComplete: () => void;
}

const TUTORIAL_STEPS = [
  {
    title: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ NomadDays!',
    description: '–û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ –¥–Ω–∏ –ø–æ —Å—Ç—Ä–∞–Ω–∞–º –∏ –ø–ª–∞–Ω–∏—Ä—É–π—Ç–µ –ø–æ–µ–∑–¥–∫–∏ —Å —É—á—ë—Ç–æ–º –ø—Ä–∞–≤–∏–ª —Ä–µ–∑–∏–¥–µ–Ω—Ü–∏–∏',
    image: 'üåç',
    action: '–ü–æ–Ω—è—Ç–Ω–æ'
  },
  {
    title: '–î–æ–±–∞–≤–ª—è–π—Ç–µ –ø–æ–µ–∑–¥–∫–∏',
    description: '–£–∫–∞–∑—ã–≤–∞–π—Ç–µ —Å—Ç—Ä–∞–Ω—É, –¥–∞—Ç—ã –≤—ä–µ–∑–¥–∞ –∏ –≤—ã–µ–∑–¥–∞. –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ—Å—á–∏—Ç–∞–µ—Ç –¥–Ω–∏',
    image: '‚úàÔ∏è',
    action: '–î–∞–ª—å—à–µ'
  },
  {
    title: '–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø—Ä–∞–≤–∏–ª–∞',
    description: '–í–∫–ª—é—á–∏—Ç–µ –ø—Ä–∞–≤–∏–ª–∞ –¥–ª—è —Å—Ç—Ä–∞–Ω (–Ω–∞–ø—Ä–∏–º–µ—Ä, –®–µ–Ω–≥–µ–Ω 90/180 –¥–Ω–µ–π)',
    image: '‚öñÔ∏è',
    action: '–î–∞–ª—å—à–µ'
  },
  {
    title: '–ü–ª–∞–Ω–∏—Ä—É–π—Ç–µ –±—É–¥—É—â–∏–µ –ø–æ–µ–∑–¥–∫–∏',
    description: '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫, —á—Ç–æ–±—ã –ø–æ–Ω—è—Ç—å, —Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π —É –≤–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å',
    image: 'üìÖ',
    action: '–ù–∞—á–∞—Ç—å!'
  }
];

export function WelcomeModal({ isOpen, onClose, onComplete }: WelcomeModalProps) {
  const [currentStep, setCurrentStep] = useState(0);

  if (!isOpen) return null;

  const handleNext = () => {
    if (currentStep < TUTORIAL_STEPS.length - 1) {
      setCurrentStep(currentStep + 1);
    } else {
      onComplete();
    }
  };

  const handleSkip = () => {
    onComplete();
  };

  const step = TUTORIAL_STEPS[currentStep];
  const isLastStep = currentStep === TUTORIAL_STEPS.length - 1;

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
      <div className="bg-white rounded-lg max-w-md w-full p-6 text-center">
        {/* Progress Bar */}
        <div className="flex justify-center mb-6">
          {TUTORIAL_STEPS.map((_, index) => (
            <div
              key={index}
              className={`w-2 h-2 rounded-full mx-1 ${
                index <= currentStep ? 'bg-blue-500' : 'bg-gray-300'
              }`}
            />
          ))}
        </div>

        {/* Step Content */}
        <div className="text-6xl mb-4">{step.image}</div>
        <h2 className="text-xl font-bold mb-3 text-gray-800">{step.title}</h2>
        <p className="text-gray-600 mb-6 leading-relaxed">{step.description}</p>

        {/* Action Buttons */}
        <div className="flex gap-3">
          {currentStep > 0 && (
            <Button
              variant="outline"
              onClick={() => setCurrentStep(currentStep - 1)}
              className="flex-1"
            >
              –ù–∞–∑–∞–¥
            </Button>
          )}
          <Button
            onClick={handleNext}
            className="flex-1"
          >
            {step.action}
          </Button>
        </div>

        {/* Skip Button */}
        {!isLastStep && (
          <button
            onClick={handleSkip}
            className="text-gray-500 text-sm mt-4 hover:text-gray-700"
          >
            –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å
          </button>
        )}
      </div>
    </div>
  );
}
